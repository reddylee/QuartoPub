{
  "hash": "e462120345d27337ddd96b64c879243a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: DuckDB in R\nformat:\n  aps-html:\n    code-tools: true\nother-links:\n    - text: Download data\n      href: data/gdp.csv\n      icon: download\n---\n\n\n## Establish a connection to DuckDB\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(DBI)\nlibrary(duckdb)\nlibrary(duckplyr)\nlibrary(tictoc)\nlibrary(nycflights23)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# to start an in-memory database\ncon <- dbConnect(duckdb())\n# or con <- dbConnect(duckdb(), dbdir = \":memory:\")\n\n# to use a database file (not shared between processes)\n# con <- dbConnect(duckdb(), dbdir = \"my-db.duckdb\", read_only = FALSE)\n# to use a database file (shared between processes)\n# con <- dbConnect(duckdb(), dbdir = \"my-db.duckdb\", read_only = TRUE)\n```\n:::\n\n\n## Load data into DuckDB\n\n### Load data from `R` chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# write mtcars, from R environment, to duckdb database\ndbWriteTable(con, \"mtcars\", mtcars) \n\n# register iris, from R environment, as a view in duckdb\nduckdb_register(con, \"view\", iris) \nduckdb_register(con, \"flights\", flights)\n\n# read data from local file to duckdb\nduckdb_read_csv(con, \"gdp\", \"data/gdp.csv\", na.strings = \"NA\")\n```\n:::\n\n\n### Load data from `sql` chunk\n\n\n::: {.cell}\n\n```{.sql .cell-code}\ncreate table gdp2 as\nselect * from read_csv('data/gdp.csv')\n```\n:::\n\n\n### Show tables in DuckDB\n\n-   list tables in `R` chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbListTables(con) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"flights\" \"gdp\"     \"gdp2\"    \"mtcars\"  \"view\"   \n```\n\n\n:::\n:::\n\n\n-   list tables in `sql connection` chunk\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nshow tables\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: 5 records\n\n|name    |\n|:-------|\n|flights |\n|gdp     |\n|gdp2    |\n|mtcars  |\n|view    |\n\n</div>\n:::\n\n\n## Query data from DuckDB\n\n### Oder of query execution\n\n![](../fig/sql_query_order.webp)\n\nPlease visit [SQL Query Order](https://lukianovihor.medium.com/sql-order-of-query-execution-8c7cd926400) for more information.\n\n### View the whole table\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT * FROM gdp\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: Displaying records 1 - 10\n\n|X  |country_name |scode | COWcode| year| gdppc| edu_year|\n|:--|:------------|:-----|-------:|----:|-----:|--------:|\n|1  |Mexico       |MEX   |      70| 1946| 3.174|    2.292|\n|2  |Mexico       |MEX   |      70| 1947| 3.242|    2.354|\n|3  |Mexico       |MEX   |      70| 1948| 3.366|    2.416|\n|4  |Mexico       |MEX   |      70| 1949| 3.568|    2.478|\n|5  |Mexico       |MEX   |      70| 1950| 3.960|    2.540|\n|6  |Mexico       |MEX   |      70| 1951| 4.181|    2.628|\n|7  |Mexico       |MEX   |      70| 1952| 4.288|    2.716|\n|8  |Mexico       |MEX   |      70| 1953| 4.306|    2.804|\n|9  |Mexico       |MEX   |      70| 1954| 4.469|    2.892|\n|10 |Mexico       |MEX   |      70| 1955| 4.644|    2.980|\n\n</div>\n:::\n\n\n### More complex queries\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nselect * from mtcars\nwhere hp > 100\norder by -hp\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: Displaying records 1 - 10\n\n|  mpg| cyl|  disp|  hp| drat|    wt|  qsec| vs| am| gear| carb|\n|----:|---:|-----:|---:|----:|-----:|-----:|--:|--:|----:|----:|\n| 15.0|   8| 301.0| 335| 3.54| 3.570| 14.60|  0|  1|    5|    8|\n| 15.8|   8| 351.0| 264| 4.22| 3.170| 14.50|  0|  1|    5|    4|\n| 14.3|   8| 360.0| 245| 3.21| 3.570| 15.84|  0|  0|    3|    4|\n| 13.3|   8| 350.0| 245| 3.73| 3.840| 15.41|  0|  0|    3|    4|\n| 14.7|   8| 440.0| 230| 3.23| 5.345| 17.42|  0|  0|    3|    4|\n| 10.4|   8| 460.0| 215| 3.00| 5.424| 17.82|  0|  0|    3|    4|\n| 10.4|   8| 472.0| 205| 2.93| 5.250| 17.98|  0|  0|    3|    4|\n| 16.4|   8| 275.8| 180| 3.07| 4.070| 17.40|  0|  0|    3|    3|\n| 17.3|   8| 275.8| 180| 3.07| 3.730| 17.60|  0|  0|    3|    3|\n| 15.2|   8| 275.8| 180| 3.07| 3.780| 18.00|  0|  0|    3|    3|\n\n</div>\n:::\n\n\nWe can omit `Select *` in the query in `duckdb` as it is the default.\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nfrom mtcars\nwhere hp > 100\norder by -hp\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: Displaying records 1 - 10\n\n|  mpg| cyl|  disp|  hp| drat|    wt|  qsec| vs| am| gear| carb|\n|----:|---:|-----:|---:|----:|-----:|-----:|--:|--:|----:|----:|\n| 15.0|   8| 301.0| 335| 3.54| 3.570| 14.60|  0|  1|    5|    8|\n| 15.8|   8| 351.0| 264| 4.22| 3.170| 14.50|  0|  1|    5|    4|\n| 14.3|   8| 360.0| 245| 3.21| 3.570| 15.84|  0|  0|    3|    4|\n| 13.3|   8| 350.0| 245| 3.73| 3.840| 15.41|  0|  0|    3|    4|\n| 14.7|   8| 440.0| 230| 3.23| 5.345| 17.42|  0|  0|    3|    4|\n| 10.4|   8| 460.0| 215| 3.00| 5.424| 17.82|  0|  0|    3|    4|\n| 10.4|   8| 472.0| 205| 2.93| 5.250| 17.98|  0|  0|    3|    4|\n| 16.4|   8| 275.8| 180| 3.07| 4.070| 17.40|  0|  0|    3|    3|\n| 17.3|   8| 275.8| 180| 3.07| 3.730| 17.60|  0|  0|    3|    3|\n| 15.2|   8| 275.8| 180| 3.07| 3.780| 18.00|  0|  0|    3|    3|\n\n</div>\n:::\n\n\nWe can anti-select columns in the query in `duckdb` as shown below.\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nfrom flights\nselect * exclude (year, month, day)\nwhere month = 1 and day = 1\norder by dep_delay desc\nlimit 10\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: Displaying records 1 - 10\n\n| dep_time| sched_dep_time| dep_delay| arr_time| sched_arr_time| arr_delay|carrier | flight|tailnum |origin |dest | air_time| distance| hour| minute|time_hour           |\n|--------:|--------------:|---------:|--------:|--------------:|---------:|:-------|------:|:-------|:------|:----|--------:|--------:|----:|------:|:-------------------|\n|     1733|           1045|       408|     2018|           1345|       393|UA      |    740|N17730  |EWR    |MCO  |      127|      937|   10|     45|2023-01-01 10:00:00 |\n|     1445|            830|       375|     1754|           1205|       349|DL      |    126|N705TW  |JFK    |SAN  |      330|     2446|    8|     30|2023-01-01 08:00:00 |\n|     1453|            840|       373|     1735|           1156|       339|B6      |    968|N193JB  |LGA    |PBI  |      147|     1035|    8|     40|2023-01-01 08:00:00 |\n|     1158|            600|       358|     1404|            831|       333|DL      |    825|N3756   |EWR    |ATL  |      108|      746|    6|      0|2023-01-01 06:00:00 |\n|     1124|            600|       324|     1320|            755|       325|DL      |    487|N394DX  |LGA    |DTW  |       87|      502|    6|      0|2023-01-01 06:00:00 |\n|     1933|           1420|       313|     2214|           1731|       283|B6      |    656|N2086J  |EWR    |MCO  |      130|      937|   14|     20|2023-01-01 14:00:00 |\n|     2030|           1545|       285|     2304|           1856|       248|UA      |    789|N77259  |LGA    |IAH  |      185|     1416|   15|     45|2023-01-01 15:00:00 |\n|     1115|            639|       276|     1402|            940|       262|B6      |    112|N2086J  |EWR    |MCO  |      140|      937|    6|     39|2023-01-01 06:00:00 |\n|     1056|            700|       236|     1345|           1027|       198|AS      |    349|N268AK  |EWR    |SEA  |      331|     2402|    7|      0|2023-01-01 07:00:00 |\n|     2127|           1735|       232|     2247|           1900|       227|B6      |    494|N2102J  |JFK    |ROC  |       55|      264|   17|     35|2023-01-01 17:00:00 |\n\n</div>\n:::\n\n\nMore complex queries can be written in `sql` chunk as shown below.\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT *\nFROM (\n   SELECT\n     tailnum,\n    COUNT(*) AS count,\n    AVG(distance) AS dist,\n    AVG(arr_delay) AS delay\n  FROM flights\n  GROUP BY tailnum\n) q01\nWHERE (count > 20.0) AND (dist < 2000.0) AND (NOT((delay IS NULL)))\nlimit 10\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: Displaying records 1 - 10\n\n|tailnum | count|      dist|     delay|\n|:-------|-----:|---------:|---------:|\n|N925AN  |    70|  987.4000| -1.771429|\n|N2043J  |   164| 1702.0427| 20.331210|\n|N659JB  |   222| 1174.3964| 16.052885|\n|N342NW  |    73| 1015.0548|  7.478873|\n|N612NK  |    64| 1130.4375|  3.645161|\n|N2027J  |   122| 1432.7787| 26.547826|\n|N24715  |   173|  915.2717|  7.093567|\n|N413UA  |    80|  914.5375| 12.126582|\n|N27274  |   234| 1323.9359|  5.914163|\n|N73256  |    99| 1072.1414|  7.232323|\n\n</div>\n:::\n\n\n## Save outcome of query into R environment\n\nWe can save the outcome of the query into the R environment as shown below[^1].\n\n[^1]: Please go to upper right corner to view the source code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntic(\"sql\")\n```\n:::\n\n::: {.cell output.var='top10_delayed_planes'}\n\n```{.sql .cell-code}\nSELECT tailnum, AVG(distance) AS dist, AVG(arr_delay) AS delay\nFROM flights\nWHERE month = 1\nGROUP BY tailnum\nHAVING COUNT(*) > 20\nORDER BY delay DESC\nLIMIT 10\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsql: 0.033 sec elapsed\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntic(\"R\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR: 0.096 sec elapsed\n```\n\n\n:::\n:::\n\nThe outcome of the query is saved in the R environment as `top10_delayed_planes` and we can call it in R chunk as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# same result with the query in R\ntop10_delayed_planes |> \n  gt() |> \n  tab_options(table.width = pct(90),\n              column_labels.font.size = 16,\n              column_labels.font.weight = \"bold\",\n              column_labels.text_transform = \"capitalize\") |>\n  opt_row_striping()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"tjuoqguqcw\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#tjuoqguqcw table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#tjuoqguqcw thead, #tjuoqguqcw tbody, #tjuoqguqcw tfoot, #tjuoqguqcw tr, #tjuoqguqcw td, #tjuoqguqcw th {\n  border-style: none;\n}\n\n#tjuoqguqcw p {\n  margin: 0;\n  padding: 0;\n}\n\n#tjuoqguqcw .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 90%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#tjuoqguqcw .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#tjuoqguqcw .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#tjuoqguqcw .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 16px;\n  font-weight: bold;\n  text-transform: capitalize;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#tjuoqguqcw .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 16px;\n  font-weight: bold;\n  text-transform: capitalize;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#tjuoqguqcw .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#tjuoqguqcw .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#tjuoqguqcw .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#tjuoqguqcw .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#tjuoqguqcw .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#tjuoqguqcw .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#tjuoqguqcw .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#tjuoqguqcw .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#tjuoqguqcw .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#tjuoqguqcw .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tjuoqguqcw .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#tjuoqguqcw .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#tjuoqguqcw .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#tjuoqguqcw .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tjuoqguqcw .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#tjuoqguqcw .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tjuoqguqcw .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#tjuoqguqcw .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tjuoqguqcw .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tjuoqguqcw .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tjuoqguqcw .gt_left {\n  text-align: left;\n}\n\n#tjuoqguqcw .gt_center {\n  text-align: center;\n}\n\n#tjuoqguqcw .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#tjuoqguqcw .gt_font_normal {\n  font-weight: normal;\n}\n\n#tjuoqguqcw .gt_font_bold {\n  font-weight: bold;\n}\n\n#tjuoqguqcw .gt_font_italic {\n  font-style: italic;\n}\n\n#tjuoqguqcw .gt_super {\n  font-size: 65%;\n}\n\n#tjuoqguqcw .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#tjuoqguqcw .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#tjuoqguqcw .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#tjuoqguqcw .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#tjuoqguqcw .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#tjuoqguqcw .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#tjuoqguqcw .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"tailnum\">tailnum</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"dist\">dist</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"delay\">delay</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left\">N394DA</td>\n<td headers=\"dist\" class=\"gt_row gt_right\">1224.1333</td>\n<td headers=\"delay\" class=\"gt_row gt_right\">47.43333</td></tr>\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left gt_striped\">N325PQ</td>\n<td headers=\"dist\" class=\"gt_row gt_right gt_striped\">423.8214</td>\n<td headers=\"delay\" class=\"gt_row gt_right gt_striped\">44.89286</td></tr>\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left\">N691CA</td>\n<td headers=\"dist\" class=\"gt_row gt_right\">417.5641</td>\n<td headers=\"delay\" class=\"gt_row gt_right\">44.02857</td></tr>\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left gt_striped\">N272PQ</td>\n<td headers=\"dist\" class=\"gt_row gt_right gt_striped\">502.4242</td>\n<td headers=\"delay\" class=\"gt_row gt_right gt_striped\">33.12121</td></tr>\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left\">N320SY</td>\n<td headers=\"dist\" class=\"gt_row gt_right\">544.0833</td>\n<td headers=\"delay\" class=\"gt_row gt_right\">32.08333</td></tr>\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left gt_striped\">N558JB</td>\n<td headers=\"dist\" class=\"gt_row gt_right gt_striped\">1127.8400</td>\n<td headers=\"delay\" class=\"gt_row gt_right gt_striped\">32.00000</td></tr>\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left\">N116AN</td>\n<td headers=\"dist\" class=\"gt_row gt_right\">2506.3333</td>\n<td headers=\"delay\" class=\"gt_row gt_right\">31.44444</td></tr>\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left gt_striped\">N187GJ</td>\n<td headers=\"dist\" class=\"gt_row gt_right gt_striped\">545.8182</td>\n<td headers=\"delay\" class=\"gt_row gt_right gt_striped\">30.87879</td></tr>\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left\">N905XJ</td>\n<td headers=\"dist\" class=\"gt_row gt_right\">458.5714</td>\n<td headers=\"delay\" class=\"gt_row gt_right\">30.57143</td></tr>\n    <tr><td headers=\"tailnum\" class=\"gt_row gt_left gt_striped\">N193JB</td>\n<td headers=\"dist\" class=\"gt_row gt_right gt_striped\">448.6078</td>\n<td headers=\"delay\" class=\"gt_row gt_right gt_striped\">29.98000</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nWhy bother with `duckdb` when we can do the same in `R`? You might ask. The answer is that `duckdb` is faster than `R` for large datasets. As showed above, the query in `duckdb` is much faster than in `R` to get the same results. \n\nWe might not notice a significant difference in query execution speed in this example because the dataset is small. However, the discrepancy becomes more apparent with larger datasets. Let's examine a big dataset to observe the contrast in query execution speed. We'll use a dataset containing item checkouts from Seattle public libraries, accessible online at [Seattle](https://data.seattle.gov/Community/Checkouts-by-Title/tmmm-ytt6/about_data).\n\nWhen attempting to read the dataset with `read_csv()`, it may encounter considerable processing delays or even fail outright. This is primarily due to the dataset's substantial size, comprising approximately 41,389,465 rows, spanning 12 columns, and occupying 9.21 GB of storage space. The following code would fail to read such voluminous data.\n\n```{{r}}\nread_csv(\"~/GitHub/data/seattle-library-checkouts.csv\") |> \n  nrow()\n```\n\nLet's try to query with `duckdb`.\n\n::: {.cell}\n\n```{.r .cell-code}\ntic(\"sql\")\n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code}\nSelect Count(*)\nFrom read_csv('~/GitHub/data/seattle-library-checkouts.csv')\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: 1 records\n\n| count_star()|\n|------------:|\n|     41389465|\n\n</div>\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsql: 6.207 sec elapsed\n```\n\n\n:::\n:::\n\n\n`DuckDB` took a bit longer to retrieve the results, more than 4 seconds, but the performance was quite acceptable. It outperformed `R`, which failed to read the data altogether.\n\n## Disconnect from DuckDB\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbDisconnect(con, shutdown = TRUE)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}